@page "/order/create"
@inject IFoodsRepo foodsRepo
@inject IPlaceOrderStrategy placeOrder
@inject NavigationManager navManager

<h3>Create an order</h3>

<EditForm Model="@order" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary Model="@order" />

    <div class="form-group">
        <label class="control-label">Item to order</label>
        <select @onchange="FoodItemChange" class="form-control">
            <option value="">Select a meal...</option>
            @foreach (var item in foodItems)
            {
                <option value="@item.Id">@item.Title</option>
            }
        </select>
    </div>

    <div class="´form-group">
        <label class="control-label">Quantity</label>
        <InputNumber @bind-Value="@order.Quantity" class="form-control" />
        <ValidationMessage For="@(() => order.Quantity)" class="text-danger" />
    </div>

    <div class="´form-group">
        <label class="control-label">Your name</label>
        <InputText @bind-Value="@order.OrderName" class="form-control" />
        <ValidationMessage For="@(() => order.OrderName)" class="text-danger" />
    </div>

    <div class="form-group">
        <input type="submit" value="Order food" class="btn btn-dark" />
    </div>

</EditForm>


@code {
    private OrderModel order = new OrderModel();
    private List<FoodModel> foodItems = new List<FoodModel>();

    protected async override Task OnParametersSetAsync()
    {
        foodItems = await foodsRepo.GetAllFoods();
    }

    private async Task HandleValidSubmit()
    {
        FoodModel selectedFood = foodItems.Where(x => x.Id == order.FoodId).FirstOrDefault();

        order.Total = order.Quantity * selectedFood.Price;

        int id = await placeOrder.Place(order);

        navManager.NavigateTo($"/order/display/{id}");
    }

    private void FoodItemChange(ChangeEventArgs e)
    {
        try 
        {
            if (String.IsNullOrWhiteSpace(e.Value.ToString()) == false)
            {
                var selectedFoodId = int.Parse(e.Value.ToString());

                order.FoodId = selectedFoodId;
            }
            else
            {
                order.FoodId = 0;
            }
        }
        catch (Exception) 
        {
            order.FoodId = 0;
        }
    }
}
